replicaCount: 1
image:
  repository: nginx
  tag: stable
  pullPolicy: IfNotPresent
service:
  type: ClusterIP
  port: 80
ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - site.localtest.me
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

chaoskube:
  enabled: false
seq:
  enabled: true
  # ingress:
  #   enabled: true
  #   hosts:
  #     - logs.localtest.me 
  #     - seq.localtest.me 
fluentd-elasticsearch:
  enabled: false
fluentd:
  enabled: true
  configMaps:
    system.conf: |-
      <system>
        root_dir /tmp/fluentd-buffers/
      </system>
    fluent.conf: |
      <match fluent.**>
        @type null
      </match>
      <source>
        @type tail
        path /var/log/containers/*.log
        pos_file /var/log/fluentd-containers.log.pos
        time_format %Y-%m-%dT%H:%M:%S.%NZ
        tag kubernetes.*
        format json
        read_from_head true
      </source>

    containers.input.conf: |-
    #
    system.input.conf: |-
    #
    forward.input.conf: |-
    #
    monitoring.conf: |-
    #
    output.conf: |
      <match kubernetes.var.log.containers.**fluentd**.log>
        @type null
      </match>
      <match kubernetes.var.log.containers.**kube-system**.log>
        @type null
      </match>
      <match kubernetes.var.log.containers.opsdemo-**.log>
        @type null
      </match>
      <filter kubernetes.**>
        @type kubernetes_metadata
      </filter>
      <match **>
        @type stdout
      </match>


    containers.input.conf: |-

    system.input.conf: |-

    forward.input.conf: |-

    monitoring.conf: |-

    output.conf: |

      <match kubernetes.var.log.containers.**fluentd**.log>
        @type null
      </match>
      <match kubernetes.var.log.containers.**kube-system**.log>
        @type null
      </match>
      <match kubernetes.var.log.containers.opsdemo-**.log>
        @type null
      </match>
      <filter kubernetes.**>
        @type kubernetes_metadata
      </filter>
      <match **>
        @type stdout
      </match>
prometheus:
  enabled: true
  server:
    ingress:
      enabled: true
      hosts:
        - prometheus.localtest.me 
  alertmanager:
    ingress:
      enabled: true
      hosts:
        - prometheus-alertmanager.localtest.me

grafana:
  enabled: true
  adminUser: admin
  adminPassword: badpasswordðŸ¤£
  plugins:
    - grafana-clock-panel
    - grafana-simple-json-datasource
    - grafana-azure-monitor-datasource
  downloadDashboardsImage:
    repository: appropriate/curl
    tag: latest
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    hosts:
      - grafana.localtest.me
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        url: "http://opsdemo-prometheus-server"
        access: proxy
        isDefault: true

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default

  dashboards:
    default:
      pods:
        gnetId: 4686
        revision: 2
        datasource: Prometheus
      kubernetes-cluster:
        gnetId: 8174
        revision: 1
        datasource: Prometheus
      dashboard-overview:
        url: https://raw.githubusercontent.com/ssaraswati/opsdemo/master/dashboard-overview.json
        datasource: Prometheus
      ingress-dashboard:
        url: https://raw.githubusercontent.com/ssaraswati/opsdemo/master/dashboard-nodes.json
        datasource: Prometheus
      dashboard-ingress:
        url: https://raw.githubusercontent.com/ssaraswati/opsdemo/master/dashboard-ingress.json
        datasource: Prometheus
      dashboard-cluster:
        url: https://raw.githubusercontent.com/ssaraswati/opsdemo/master/dashboard-cluster.json
        datasource: Prometheus

nginx-ingress:
  enabled: true
  controller:
    stats:
      enabled: true
    metrics:
      enabled: true
      service:
        annotations:
          prometheus.io/port: "10254"
          prometheus.io/scrape: "true"

